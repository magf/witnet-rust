name: Release Tag

on:
  push:
    tags:
      - '*-bridge*'

env:
  CARGO_TERM_COLOR: always

jobs:
#?####################################################################################################?#
#?                                                                                                    ?#
#?                                        Build Helper Images                                         ?#
#?                                                                                                    ?#
#?####################################################################################################?#
  aarch64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Building Docker Image
        uses: ./.github/actions/build-helper
        with:
          imagename: aarch64-unknown-linux-gnu

  x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Building Docker Image
        uses: ./.github/actions/build-helper
        with:
          imagename: x86_64-unknown-linux-gnu

#?####################################################################################################?#
#?                                                                                                    ?#
#?                                        Build Releases                                              ?#
#?                                                                                                    ?#
#?####################################################################################################?#

  Build_aarch64:
    needs: [aarch64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Building aarch64 Binary
        uses: ./.github/actions/build-bridge
        with:
          target: aarch64-unknown-linux-gnu

      - name: see path
        run: cd target && tree

      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-release
          path: |
            target/aarch64-unknown-linux-gnu/release/witnet-centralized-ethereum-bridge

  Build_x86_64:
    needs: [x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Building x86_64 Binary
        uses: ./.github/actions/build-bridge
        with:
          target: x86_64-unknown-linux-gnu

      - name: see path
        run: cd target && tree

      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-release
          path: |
            target/x86_64-unknown-linux-gnu/release/witnet-centralized-ethereum-bridge


#?####################################################################################################?#
#?                                                                                                    ?#
#?                                        Sign & Publish                                              ?#
#?                                                                                                    ?#
#?####################################################################################################?#
  # Publish:
  #   needs: [Build_aarch64, Build_x86_64]
  #   runs-on: ubuntu-latest
  #   environment: tags
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Login to Docker Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build Base
  #       run: |
  #         docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  #         docker buildx create --name multiarch --driver docker-container --use
  #         docker buildx inspect --bootstrap

  #     # Build Docker images (Latest & TAG)
  #     - name: Build TAG
  #       run: docker buildx build -f docker/witnet-rust/Dockerfile --progress=plain --build-arg WITNET_VERSION=${{github.ref_name}} --platform linux/amd64,linux/arm64,linux/arm/v7 --tag witnet/witnet-rust:${{github.ref_name}} docker/witnet-rust --push --no-cache

  #     - name: Check Pre-release
  #       run: |
  #         TAG=${{ github.ref_name }}
  #         if [[ "$TAG" =~ - ]]; then
  #           echo "prerelease=true" >> $GITHUB_ENV
  #         else
  #           echo "prerelease=false" >> $GITHUB_ENV
  #         fi

  #     - name: Build Latest if not Pre-Release
  #       run: docker buildx build -f docker/witnet-rust/Dockerfile --progress=plain --build-arg WITNET_VERSION=latest --platform linux/amd64,linux/arm64,linux/arm/v7 --tag witnet/witnet-rust:latest docker/witnet-rust --push --no-cache
  #       if: env.prerelease == 'false'
